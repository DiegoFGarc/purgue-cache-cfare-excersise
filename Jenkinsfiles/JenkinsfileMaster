node {

    stage('init') {
        env.ENVIRONMENT = params.ENV
        env.PURGE_CACHE_JOB = "purgue-cloudfare-cache"
        def URLS = params.urls
    }

    stage('flush_cache') {
        try {
            build job: "${PURGE_CACHE_JOB}", parameters: [
            string(name: "urls", value: "${URLS}"),
            string(name: "ENV", value: "${ENV}")
            ], wait: true
            sh "echo 200 > status.txt"
         } catch (Exception e) {
            sh "echo Error: ${e.message}"
            sh "echo 500 > status.txt"
        }
    }

    stage('validate_cache_purge') {
        def fileContent = readFile('status.txt').trim()
        if (fileContent == '200') {
            def build_user = currentBuild.getBuildCauses('hudson.model.Cause$UserIdCause')
            env.BUILD_USER = build_user.userName
            echo "${env.BUILD_USER} purged cache for the following development resources: \n ${params.urls}"
        } else {
            echo "ERROR: Cache purge job failed"
            error("Cache purge job failed")
        }
    }
}